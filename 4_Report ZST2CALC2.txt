*&---------------------------------------------------------------------*
*& Report ZST2CALC2
*&---------------------------------------------------------------------*
*& Demo calculation program using global class
*&---------------------------------------------------------------------*
REPORT zst2calc2.

***********************************************************************
* Selection screen definition
***********************************************************************
SELECTION-SCREEN BEGIN OF BLOCK main
  WITH FRAME.

PARAMETERS:
  p_input1 TYPE i,
  p_input2 TYPE i.

SELECTION-SCREEN END OF BLOCK main.


***********************************************************************
* Exception class definition
***********************************************************************
CLASS lcx_error DEFINITION
  INHERITING FROM cx_static_check
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES:
      if_t100_message.

    CONSTANTS:
      exception_lcx_error TYPE string
        VALUE 'LCX_ERROR'.

*   Add additional exception type texts and objects

    CONSTANTS:
      BEGIN OF lcx_error,
*     --> Default exception type
        msgid TYPE symsgid VALUE 'ZST2_GENERAL',
        msgno TYPE symsgno VALUE '000',
        attr1 TYPE scx_attrname VALUE 'EXCEPTION_LCX_ERROR',
        attr2 TYPE scx_attrname VALUE '',
        attr3 TYPE scx_attrname VALUE '',
        attr4 TYPE scx_attrname VALUE '',
      END OF lcx_error.

    METHODS:
      constructor
        IMPORTING
          textid   LIKE if_t100_message=>t100key OPTIONAL
          previous LIKE previous OPTIONAL.

ENDCLASS.


***********************************************************************
* Startup class definition
***********************************************************************
CLASS lcl_start DEFINITION.

  PUBLIC SECTION.

    CONSTANTS:
      mc_error  TYPE bapi_mtype VALUE 'E',
      mc_status TYPE bapi_mtype VALUE 'S'.

    CLASS-DATA:
*     Generic error object
      mo_error TYPE REF TO cx_root.

    CLASS-METHODS:
      run
        RAISING
          lcx_error.

ENDCLASS.



***********************************************************************
* Program starts here
***********************************************************************
START-OF-SELECTION.
  TRY.
      lcl_start=>run( ).
    CATCH cx_root INTO lcl_start=>mo_error.
      MESSAGE lcl_start=>mo_error TYPE lcl_start=>mc_status
                                  DISPLAY LIKE  lcl_start=>mc_error.
  ENDTRY.


***********************************************************************
* Exception class implementation
***********************************************************************
CLASS lcx_error IMPLEMENTATION.

  METHOD constructor.

    CALL METHOD super->constructor
      EXPORTING
        previous = previous.

    CLEAR me->textid.

    IF textid IS INITIAL.
*     Raise default exception type
      if_t100_message~t100key = lcx_error.
    ELSE.
      if_t100_message~t100key = textid.

*   Transfer additional exception texts here

    ENDIF.

  ENDMETHOD.

ENDCLASS.


***********************************************************************
* Startup class implementation
***********************************************************************
CLASS lcl_start IMPLEMENTATION.

  METHOD run.

*   Create an instance of the global class
    DATA(lo_main) = NEW zst2cl_calc( ).

*   Call the global class methods
    data(lv_result) = lo_main->add_values( iv_input1 = p_input1
                            iv_input2 = p_input2 ).

    lo_main->display_result( lv_result ).

  ENDMETHOD.

ENDCLASS.
